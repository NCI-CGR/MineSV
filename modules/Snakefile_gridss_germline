#!/usr/bin/env python3

gridssWkngDir = 'gridss_germline/'
gridssTempDir = config['tempDir'].rstrip('/') + '/gridss_germline/'
logDir = config['logDir'].rstrip('/') + '/'  # ensure one trailing slash

i = CALLERS.index("gridss")
gridssNt = config['maxThreads'][i]

# if the caller is multi-threaded:
i = CALLERS.index("gridss")
gridssNt = config['maxThreads'][i]



rule gridss_call:
    input: 
        ref=ref,
        bam=get_bam
    output: 
        vcf=gridssWkngDir + "{sample}.vcf.gz",
        assembly=gridssWkngDir + "{sample}.assembly.bam"
    params:
        ref = refBindPath + refFile,
        bam = get_bam_container,
	w= gridssWkngDir + "{sample}_workingdir"
    benchmark:
        "benchmarks/gridss_call/{sample}.tsv"
    resources: 
        mem_mb=40000
    log:
        logDir + 'gridss_call.{sample}.log'    
    threads: gridssNt 
    singularity: 
        'library://weizhu365/mocca-sv/gridss_2-9-4:1.0.1'
    shell: 
        """
            gridss.sh --reference {params.ref} \
                         --output {output.vcf} \
                         --assembly {output.assembly} \
                         --threads {threads} \
                         --workingdir {params.w}  \
                         --jvmheap 30g \
                         --steps All  \
                         --maxcoverage 50000 \
                         --labels {wildcards.sample} \
                         {params.bam}
        """


# end with these two rules, which feed back into the final rules in the scaffold (combine_ann_files and all)
rule gridss_list_output_files:
    input:
        gridssWkngDir + '{sample}.vcf.gz'
    output:
        temp(parentDir + 'SV_files_for_annotation_gridss.{sample}.txt')
    params:
        path = execDir + 'scripts/'
    shell:
        '{params.path}list_files.sh {input} {wildcards.sample} > {output}'

rule gridss_merge_list:
    input:
        expand(parentDir + 'SV_files_for_annotation_gridss.{sample}.txt', sample=bamDict.keys())
    output:
        parentDir + 'SV_files_for_annotation_gridss.txt'
    shell:
        'cat {input} | sort | sed "1s/^/sample gridss\\n/" > {output}'
