#### Basic analysis parameters ####
analysisMode: 'TN'  # TN, TO, germline, de_novo
callers:  # available callers: svaba, breakdancer, delly, manta, meerkat
- svaba
- breakdancer
- delly
# - manta  # manta has one step where you can opt in to running in SGE mode and providing a queue.  how to handle?
# - meerkat 
runMode:                      # set only one mode to "yes"
  callAndAnnotate: yes
  callOnly: no
  annotateOnly: no
annotateFile: '/DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/snake_tests/chr5_list_output_test/SV_files_for_annotation.txt' # only needed if in annotateOnly mode
annotationParams:
  interchromPadding: 50       # base pairs to add on either side of the breakend to be used to find overlap when comparing inter-chromosomal SVs
  crossCallerOverlap: 0.7     # minimum reciprocal overlap required to count as an intersection in other callers' data on the same subject
  genomicContextOverlap: 0.7  # what % of an SV must reside in a queried region (repeat, segdup, centro/telomeric) to count as an intersection
  publicDataOverlap: 0.7      # minimum reciprocal overlap required to count as an intersection (DGV, ClinVar, ClinGen, 1KG)
refGenome: '/DCEG/CGF/Bioinformatics/Production/Bari/refGenomes/hg19_canonical_correct_chr_order.fa' # for testing TN
genomeBuild: 'hg19'               # hg19 (chr) or b37 (no chr)

#### Samples to analyze ####
inFile: '/DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/snake_tests/test_input/tests_chr3bams.txt'  # for testing TN
  # must contain three columns: sample name, tumor bam, normal bam (space-delimited)
  # or, if de novo, must contain family ID, parent1 bam, parent2 bam, child bam
  # or, if germline, must contain sample name and bam
  # or, if tumor-only, must contain tumor bam...and PON?
  # ALSO, if the callers available have differing capabilities, be sure to have a check in the snakefile (e.g. if delly can't do tumor-only, check for delly=yes and react appropriately in the TO snakefile)
inDir: '/DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/snake_tests/test_input'


#### Directories ####
execDir: '/DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/pipeline_dev'  # to be replaced once all callers are used in containers
outDir: '/DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/pipeline_dev/test_out'
logDir: '/DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/pipeline_dev/test_out/logs'
tempDir: '/ttemp/ballewbj/sv'


#### Cluster parameters ####
clusterMode: 'qsub -V -S /bin/sh -q xlong.q -o /DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/pipeline_dev/test_out/logs -j y'  # "local" or provide the cluster submission string you want to use
# queue: xlong.q
maxNumJobs: 8  # n/a for clusterMode = local
maxThreads:  # n/a for clusterMode = local  # must assign a thread number for each of the callers listed above.  used to assign "slots" to snakefiles (qsub -pe by_node $maxThreads) and "threads" in jobs that can use multi-threading (e.g. manta, svaba, parts of meerkat)
- 4
- 1
- 1
# - 4
# checkInterval: 60
# maxWaitChecks: 3
# maxRequeue: 3


#### Caller-specific parameters ####
# NONE OF THESE ARE CURRENTLY IMPLEMENTED.
# add optional files (eg exclude file, panel of normals, etc)
# add brief definitions of flags?  See individual callers' documentation for details.
svabaParams:
  excludeFile: /DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/results_ukraine_trios/svaba/exclude.bed  # not currently implemented
  filtering:
    thing1: 1
breakdancer_params:
  filtering:
    qualThreshold: 30
    numSupportingReads: 3
dellyParams:
  filtering:
    thing1: 1
    thing2: 2
mantaParams:
  filtering:
    thing1: 1
    thing2: 2
meerkatParams:  # put all possible params in??  just ask for the command line?  keep limited set of vars?  how to treat vars that should be equivalent - just use one var?  TODO: ask for partial command line, I think
  preProcessing:
    k: 1500     # ignore nucleotides covered by at least this many reads
    l: 1        # off/on 0/1 - extract paired soft-clipped reads, pairs with one/both read unmapped and re-map
    s: 20       # number of bases removed from ends of unmapped/soft-clipped reads prior to split read mapping; also used in calling step
    q: 15       # read trimming - equivalent to BWA -q option
  calling:
    p: 3        # number of supporting mate pairs for an event to be called
    a: 0        # off/on 0/1 - adjust non-uniquely mapped reads
    u: 1        # off/on 0/1 - use all alignments in the bam file - turn on if alignments were not generated by BWA; turning this on will turn off -a
    d: 5        # st dev cutoff to call discordant mate pairs; also used in filtering step as -D
    c: 5        # st dev cutoff to cluster discordant mate pairs
    Q: 10       # min mapping quality for reads to be used; also used in filtering step
  mechanism:
    R: /DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/annotation/UCSC_track_data/hg19_RepeatMasker.bed
  filtering:
    R: /DCEG/CGF/Bioinformatics/Production/Bari/Struct_var_pipeline_dev/annotation/UCSC_track_data/hg19_RepeatMasker.bed \
    l: 1000     # distance of breakpoints to filter germline events from *.discord file
    n: 1        # off/on 0/1 - discard SV candidate if there are a certain number of discordant read pairs in the given genome
    u: 1        # off/on 0/1 - filter by non-uniquely mapped reads in matched normal genome
    f: 1        # off/on 0/1 - filter by soft-clipped reads in matched normal genome
    e: 1        # off/on 0/1 - filter by discordant read pairs in tumor genome
    z: 1        # off/on 0/1 - turns on filtering by number of supporting discordant read pairs (-p), number of supporting split reads (-q), and sum of supporting discordant read pairs and supporting split reads (-P)
    d: 40       # max homology allowed for deletion and intra-chromosomal events
    t: 20       # max homology allowed for inter-chromosomal translocation events

